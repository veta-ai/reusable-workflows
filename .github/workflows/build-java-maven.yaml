name: Build & Test Java Project (Maven)

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        default: '21'

      sonar_project_key:
        required: false
        type: string

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
          # cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # - name: Configure Maven settings.xml
      #   uses: s4u/maven-settings-action@v3.1.0
      #   with:
      #     servers: |
      #       [{
      #         "id": "github",
      #         "username": "${{ github.actor }}",
      #         "password": "${{ secrets.GITHUB_TOKEN }}"
      #       }]

      - name: Configure Maven settings.xml
        uses: s4u/maven-settings-action@v3.1.0    
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        with:
          repositories: |
            [{
              "id": "github",
              "url": "https://maven.pkg.github.com/veta-ai/veta-core-shared-libs",
              "releases": {
                "enabled": true
              },
              "snapshots": {
                  "enabled": true
              }
            }]

      - name: see Maven settings.xml
        run: cat ~/.m2/settings.xml

      - name: Clean and Compile
        run: mvn clean compile

      - name: Run Tests
        run: mvn test

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn clean verify sonar:sonar -DsonarToken=$SONAR_TOKEN

  # integrated-tests:
  #   name: Integrated Tests
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Java and Maven
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: ${{ inputs.java-version }}
  #         distribution: 'temurin'

  #     - name: Cache Maven packages
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.m2
  #         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
  #         restore-keys: ${{ runner.os }}-m2

  #     - name: Integrated Tests
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       run: mvn clean test

  analysis-sonarqube:
    #    Essa exclusão acontece devido a nosso pacote gratuito do sonar que só permite a excução da branch main
    if: github.ref_name == 'main'
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Sonar Build Breaker with sonar-project-key
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        uses: jkumar19/sonar-build-breaker@v1.0.0
        if: ${{ inputs.sonar_project_key != '' }}
        with:
          sonar_url: "https://sonarcloud.io"
          sonar_branch: ${{ env.GITHUB_REF_NAME }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          project_key: ${{ inputs.sonar_project_key }}

      - name: Sonar Build Breaker without sonar-project-key
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        uses: jkumar19/sonar-build-breaker@v1.0.0
        if: ${{ !inputs.sonar_project_key || inputs.sonar_project_key == '' }}
        with:
          sonar_url: "https://sonarcloud.io"
          sonar_branch: ${{ env.GITHUB_REF_NAME }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}

      # - name: Run Checkstyle
      #   run: mvn checkstyle:check